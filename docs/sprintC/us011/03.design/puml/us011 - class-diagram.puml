@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
title US011 - Class Diagram

class OrderRepository {
    - List<Order> order
    + addNewOrder(order)
    + validateOrder(announcement, orderPrice)
    + valid(order)
    + getOrders()
    + getOrdersByAnnouncement(announcement)
    + add(order)
}

class Order {
    - status
    - double orderPrice
    - String email
    - int orderID
    + getAnnouncement()
    + setAnnouncement(announcement)
    + getOrderPrice()
    + setOrderPrice(orderPrice)
    + getEmail()
    + setEmail(email)
    + getStatus()
    + setStatus(status)
    + getOrderID()
}

class Announcement {
    - LocalDate creationDate
    - int announcementID
    + getPrice()
    + setPrice(price)
    + getCreationDate()
    + setCreationDate(creationDate)
    + getAnnouncementID()
}

class OrderDecisionController {
    - orderRepository: OrderRepository
    - announcementRepository: AnnouncementRepository
    - emailService: EmailService
    + getAnnouncementListSortedByDate(): List<Announcement>
    + getOrderListSortedByPrice(orderList: List<Order>): List<Order>
    + getOrdersByAnnouncement(announcement: Announcement, orders: List<Order>): List<Order>
    + acceptPurchaseOrder(order: Order): void
    + declinePurchaseOrder(order: Order): void
    + getAllOrders(): List<Order>
    - declineOtherOrders(acceptedOrder: Order): void
}

class AnnouncementRepository {
    - announcementsList: List<Announcement>
    + addNewAnnouncement(announcement: Announcement): void
    + removeAnnouncement(announcement: Announcement): void
    + getAnnouncementsList(): List<Announcement>
    + getAnnouncementByID(announcementID: int): Announcement
}

class EmailService {
    + sendMessage(email: String, message: String): void
}

class Repositories{
   - Repositories
   +getInstance() : Repositories
   +getOrderRepository() : OrderRepository
   +getAnnouncementRepository() : AnnouncementRepository
}


OrderRepository --> Order
OrderDecisionController --> Repositories
Repositories -> Repositories : instance
Repositories --> "1" OrderRepository : orderRepository
Repositories --> "1" AnnouncementRepository : announcementRepository
AnnouncementRepository --> Announcement
OrderDecisionUI -.-> OrderDecisionController

OrderDecisionController --> EmailService



@enduml