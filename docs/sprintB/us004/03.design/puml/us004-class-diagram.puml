@startuml
skinparam classAttributeIconSize 0
skinparam linetype ortho

class CreateRequestUI{
}

class CreateRequestController{
+ createRequestController(requestTypeRepository, propertyTypeRepository, agencyRepository)
+ getRequestCategories()
+ getPropertyType()
+ setContractDuration()
+ getAgency()
+ getAgentList()
}

class Repositories{
- Repositories
+ getInstance():Repositories
+ getRequestTypeRepository()
+ getPropertyTypeRepository()
+ getAgencyRepository()
}

class PropertyTypeRepository{
- propertyTypeList: List <String>
+ getPropertyType()
}

class AgencyTypeRepository{
- agencyList: List<Agency>
+ getAgencyList()
}

class Agency{
- location: String
- designation: String
- requestList: List<Request>
- employeeList: List<Employee>
+ createRequest(requestType)
+ getAgentList(selectedAgency)
}

class RequestTypeRepository{
- requestTypeList: List<String>
+ getRequestType()
}

class Request{
- requestState: Boolean
- date: String
- requestOwner: String
+ setPropertyType(propertyType)
+ createProperty(area, location, distanceFromTheCityCentre, price, photographList)
+ addProperty(property)
+ createResidence(numberOfBedrooms, numberOfBathrooms, numberOfParkingSpaces, availableEquipment)
+ createHouse(basement, inhabitableLoft, sunExposure)
}

class Property{
- area:Integer
- location: String
- distanceFromTheCityCentre: Double
- price: Integer
- photograph: List<String>
}

class Owner{
- name: String
- passportCardNumber: Integer
}

class Residence{
- numberOfBedrooms: Integer
- numberOfBathrooms: Integer
- numberOfParkingSpaces: Integer
- availableEquipment: String
}

class House{
- basement: boolean
- inhabitableLoft: boolean
- sunExposure: String
}

class Contacts{
- phoneNumber: Integer
- emailAddress: String
}

class Employee{
- name: String
- passportCardNumber: Integer
}

class TaxNumber{
- taxNumber
}

class Rent{
- contractDuration: integer
}

CreateRequestUI -.-> CreateRequestController

CreateRequestController -.-> Repositories : repositories
CreateRequestController -.-> Agency : agency
CreateRequestController -.-> RequestTypeRepository : requestTypeRepository
CreateRequestController -.-> AgencyTypeRepository : agencyRepository
CreateRequestController -.-> PropertyTypeRepository : propertyTypeRepository

Agency --> Request : requests
Agency --> Employee : employs
AgencyTypeRepository --> Agency
Request --> Property : has
Request --> Owner : createdBy
RequestTypeRepository --> Rent: can be >

Repositories --> AgencyTypeRepository
Repositories --> PropertyTypeRepository
Repositories --> RequestTypeRepository

House --|> Residence

Residence --|> Property

Agency --> Contacts : has >
Employee --> Contacts : has >
Owner --> Contacts : has >

Owner ---> TaxNumber : has >
Employee --> TaxNumber : has >

Repositories -> Repositories : instance
@enduml