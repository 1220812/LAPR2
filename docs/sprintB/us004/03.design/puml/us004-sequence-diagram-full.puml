@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Owner" as ADM
participant ":CreateRequestUI" as UI
participant ":CreateRequestController" as CTRL
participant ":Repositories" as Rep
participant "repositories\n:Repositories" as PLAT
participant "RequestTypeRepository:\nRequestTypeRepository" as TaskCategoryRepository
participant "PropertyTypeRepository" as ProType
participant "agency: \nAgency" as A
participant "agencyRepository:\nAgencyRepository" as ARep
participant "request: \nRequest" as Req
participant "property: \nProperty" as Prop
participant "Agent:\nAgent" as Agent
participant "agentList:\nAgentList" as AgList
participant "residence:\nResidence" as R
participant "house:\nHouse" as House
participant "photographList" as PhotoList
participant "area(m^2)\nfloat"
participant "distanceFromTheCityCentre\nfloat"
participant "location\nstring"
participant "numberOfPropertyPhotos\ninteger"
participant "numberOfBedrooms\ninteger"
participant "numberOfBathrooms\ninteger"
participant "numberOfParkingSpaces\ninteger"
participant "availableEquipment\nstring"
participant "basement\nboolean"
participant "inhabitableLoft\nboolean"
participant "sunExposure\nstring"
participant "price\nfloat"
participant "contractDuration\ninteger"

activate ADM

        ADM -> UI : asks to create a new request

        activate UI

            UI -> CTRL : getRequestCategories()
            activate CTRL

                CTRL -> Rep : getInstance()
                activate Rep

                    Rep --> CTRL: repositories
                deactivate Rep

                CTRL -> PLAT : getRequestCategoryRepository()
                activate PLAT

                    PLAT --> CTRL: requestCategoryRepository
                deactivate PLAT

                CTRL -> TaskCategoryRepository : getRequestTypeRepository()
                activate TaskCategoryRepository

                    TaskCategoryRepository --> CTRL : requestTypeList
                deactivate TaskCategoryRepository

                CTRL --> UI : requestCategoryList
            deactivate CTRL

            UI --> ADM : shows type of request list \nand asks to select one
        deactivate UI

    ADM -> UI : selects a type of request
    activate UI

    UI -> CTRL : create a request type
        activate CTRL

    CTRL --> A : create a request type
    activate A

    A -> Req** : create
    activate Req

    Req --> A : request
    deactivate Req

    A -> A : add Request

    deactivate A


    UI -> CTRL : getPropertyType()

    CTRL -> PLAT : getPropertyTypeProperty()
    activate PLAT

    PLAT --> CTRL : PropertyTypeRepository
    deactivate PLAT

    CTRL -> ProType :getPropertyType()
    activate ProType

    ProType --> CTRL : Property Type
    deactivate ProType

    CTRL --> UI : propert Type List
    deactivate CTRL

        UI --> ADM : shows list of property type \nand asks to select one
    deactivate A
    deactivate UI

    ADM -> UI : selects type of property
    activate UI

        UI -> CTRL : create property
        activate CTRL

        CTRL --> Req :selects Property Type
        activate Req

        deactivate Req
        deactivate CTRL

        UI --> ADM : request data( area(m^2), location, price, distanceFromCityCentre)
    deactivate UI

    ADM -> UI : inserts data
    activate UI

        UI -> CTRL : create property(area(m^2), location, price, distanceFromCityCentre, photograph)
        activate CTRL

        CTRL -> Req : create property(area(m^2), location, price, distanceFromCityCentre, photograph)
        deactivate CTRL
    activate Req

    Req -> Prop**: create
    activate Prop

    Prop -> Req:  property
    Req -> Req :add property
    deactivate Prop
    deactivate Req

    UI --> ADM :  request the number of photos \nthat the owner intends to submit
    deactivate UI

    ADM -> UI : inserts the number of photos

    activate UI
    loop from 1 to the number of photos defined
    UI --> ADM : asks for the photos URI

    deactivate UI

    ADM -> UI : inserts photo URI
    activate UI

    UI -> CTRL : create Photograph
    activate CTRL

            CTRL -> Prop: creates Photograph
            deactivate CTRL

    activate Prop


    Prop -> PhotoList :  add photograph to PhotoList
    activate PhotoList
    deactivate Prop
    deactivate PhotoList
    end

    opt Rent a Property
    UI-->ADM : request data (contract duration)
    deactivate UI
    ADM -> UI : inserts data
    activate UI
    UI-> CTRL : set contractDuration()
    activate CTRL

    CTRL -> Req : set contractDuration()
    deactivate CTRL
    end

    opt Property Apartment or House

        UI--> ADM : request data(number of bedrooms, number of bathrooms, \nnumber of parking spaces and available equipment)
     deactivate UI

     ADM -> UI : inserts data
     activate UI
     UI-> CTRL : create Residence(number of bedrooms, number of bathrooms, \nnumber of parking spaces and available equipment)
     activate CTRL

     CTRL -> Req : create Residence(number of bedrooms, number of bathrooms, \nnumber of parking spaces and available equipment)
     activate Req
    deactivate CTRL

    Req -> R** : create
    activate R

    R --> Req : residence
    deactivate R
    Req-> Req : add Property
     deactivate Req


    opt Property is a House
    UI --> ADM : request data (existence of a basement and/or inhabitableLoft and sunExposure)
    deactivate UI
    ADM-> UI : inserts data
    activate UI
    UI-> CTRL : create house (existence of a basement and/or inhabitableLoft and sunExposure)
    activate CTRL

    CTRL -> Req : create house (existence of a basement and/or inhabitableLoft and sunExposure)
    activate Req

    Req -> House** : create
    activate House

    House --> Req: house
    deactivate House
    Req -> Req :add Property (house)
    deactivate Req
    deactivate CTRL
    end

    end


    UI -> CTRL : getAgency()
    activate CTRL

    CTRL -> PLAT : getAgency()
    activate PLAT
    PLAT--> CTRL : agencyRepositories
    deactivate PLAT
    CTRL -> ARep : getAgencyList()
    activate ARep

    ARep -> CTRL : agency list
    deactivate ARep
    CTRL --> UI : agency list
 deactivate CTRL
 UI --> ADM : shows agency list and asks to select one

 deactivate UI

    ADM -> UI : selects agency
    activate UI

    UI -> A : getAgentList(selected Agency)
    activate A
    loop For each employee
    A-> Agent : has an agent
    activate Agent

    Agent --> A : true / false
    deactivate Agent
    alt true
    A-> AgList :add agent to the list
    activate AgList

    AgList --> A : agent list
    deactivate AgList
    end

    end
    A --> CTRL : Agent List
    activate CTRL
    deactivate A
    CTRL --> UI : agent List
    UI --> ADM : shows agent List and asks to select one
    deactivate CTRL
    deactivate UI
    ADM -> UI : selects agent
    activate UI

    UI --> ADM : shows all the data related to the request \nand asks to confirm
    deactivate UI
    ADM -> UI : confirms data
    activate UI

    UI --> ADM : shows operation success
    deactivate UI
    deactivate ADM
    @enduml