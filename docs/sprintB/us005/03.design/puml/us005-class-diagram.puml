@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

class RegisterStoreUI

class RegisterStoreController
{
- Repositories repositories
-Store storeInstance
-State stateInstance
-City cityInstance
-Address addressInstance
+getStoreInstance()
+getStateInstance()
+getCityInstance()
+getAddressInstance()
+set stateInstance(State state)
+getCheckIfStateListIsEmpty()
+getStateList()
+getCreateStore(int ID, String designation, String phoneNumber, String email)
+getCreateAddress(String street, String doorNumber, String postalCode)
+getRegisterStore()
+getRegisterAddress()
}

class Repositories
{
-description
-StoreRepository storeRepository
-AddressRepository addressRepository
-CityRepository cityRepository
-StateRepository stateRepository
+Repositories()
+{static}getInstance() : Repositories
+getStoreRepository()
+getAddressRepository()
+getCityRepository()
+getStateRepository()
}

class Store
{
-int ID
-String designation
-String phoneNumber
-String email
-Address address
+Store(int ID,String designation, String phoneNumber, String email, String address)
+equals (Object o)
+toString()
+hasCode()
+clone()
}

class State
{
-String name
+State (String name)
+hasCode()
+equals(Object o)
+toString()
}

class City
{
-String name
+State (String name)
+hasCode()
+equals(Object o)
+toString()
}

class Address
{
-String street
-String doorNumber
-String floorNumber
-String postalCode
-State state
+Address(String street, String doorNumber, String floorNumber, String postalCode, State state)
+hasCode()
+equals(Object o)
+toString()
}

class StoreRepository
{
-List <Store> storeList
+getStoreList()
+registerStore(Store store)
+createStore(int ID, String designation, String phoneNumber, String email, Address address)
+validateStore(Store store)
}

class AddressRepository
{
-List <Address> addressList
+getAddressList()
+registerAddress(Address address)
+createAddress(String street, String doorNumber, String floorNumber, String postalCode, State state)
}

class CityRepository
{
-List <City> cityList
+getCityList()
+registerCity (Cit city)
+createCity (String name)
+checkIfDesignationExists()
}

class StateRepository
{
-List <State> stateList
+getStateList()
+registerState(State state)
+createState(String name)
+checkIfDesignationExists(String designation)
}

Repositories--> Repositories :instance
RegisterStoreUI ..> RegisterStoreController
RegisterStoreController ..> Store
RegisterStoreController ..> State
RegisterStoreController ..> Address
RegisterStoreController ..> Repositories
Repositories "1"-- "1" AddressRepository : has
Repositories "1"-- "1" StateRepository : has
Repositories "1"--"1" StoreRepository : has
StoreRepository "1" o--"*" Store :has
StateRepository "1" o--"*" State :has
AddressRepository "1" o-- "*" Address :has
@enduml