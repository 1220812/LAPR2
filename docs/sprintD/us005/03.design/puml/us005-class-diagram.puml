@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class Address {
    -String streetAddress
    -int doorNumber
    -int floorNumber
    -String zipCode
    -City city
    -District district
    -State state
}

class City{
    -String name
}

class District{
    -String name
}

class State{
    -String name
}

class Store {
    - String ID
    - String designation
    - Address
    - String emailAddress
    - String phoneNumber

    + Store(ID, designation, address, emailAddress, phoneNumber)
    + Store(ID, designation, emailAddress, phoneNumber)
    + setAddress(address)
}

class Organization {
    - String name
    - checkIfStoreExists(store) : boolean
    + Organization(name)
'  +saveTask(task)
}

class StoreRepository {
    - List<Store> stores
    - getStores() : List<Store>
    - getStoreByID(ID) : Store
    - getStoreByPhoneNumber(phoneNumber) : Store
    - getStoreByEmail(email) : Store
    - registerStore(store) : boolean
    - createStore(ID, designation, emailAddress, phoneNumber) : Store
    - createStore(ID, designation, address, emailAddress, phoneNumber) : Store
}

class StateRepository{
    + getStateByName(stateName) : State
}

class DistrictRepository{
    + getDistrictByName(districtName) : District
}

class CityRepository {
    + getCityByName(cityName) : City
}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getStoreRepository()
    + getStateRepository()
    + getDistrictRepository()
    + getCityRepository()
}

class RegisterStoreController {
    + RegisterStoreController(organizationRepository)
    + getStores() : List<Store>
    + createStore(ID, designation, emailAddress, phoneNumber) : Store
    + createStore(ID, designation, address, emailAddress, phoneNumber) : Store
    + registerStore(store) : void or boolean
    + registerAddressAtStore(store, address) : void
    - createStoreAddress(streetAddress, doorNumber, floorNumber, zipCode, state, district, city) : Address
    - getSystemAdministratorFromSession()
}

class RegisterStoreUI {
}

Repositories -> Repositories : instance


RegisterStoreUI .> RegisterStoreController

RegisterStoreController .> Repositories : repositories

Repositories -> "1" StoreRepository
Repositories -> "1" StateRepository
Repositories -> "1" DistrictRepository
Repositories -> "1" CityRepository

RegisterStoreController ..> Store
RegisterStoreController ..> OrganizationRepository : organizationRepository
RegisterStoreController ..> StoreRepository : StoreRepository

Repositories --> "1" OrganizationRepository

OrganizationRepository --> "*" Organization

RegisterStoreController ..> "1" Organization : organization
'Store "*" --> "1" TaskCategory : taskCategory
StoreRepository "1" --> "*" Store : store
StateRepository "1" --> "*" State : state
DistrictRepository "1" --> "*" District : district
CityRepository "1" --> "*" City : city

Store --> Address : address
Address --> StateRepository : state from
Address --> DistrictRepository : district from
Address --> CityRepository : city from

@enduml