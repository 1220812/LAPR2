@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
skinparam linetype orto

skinparam classAttributeIconSize 0

left to right direction

class RegisterAnnouncementUI

class RegisterAnnouncementController
{
    -area: double
    -distance: integer
    -price: double
    -photos: List<Photograph>
    -bedrooms: integer
    -bathrooms: integer
    -parkingSpaces: integer
    -availableEquipment: List<availableEquipment>
    -basement: boolean
    -loft: boolean
    -sun: String
    -comissionType: String
    -comission: double
    -announcement: Announcement
    -property: Property
    -date: LocalDate
    -photoURI: String
    +getRegisteredUsers()
    +getPropertyType()
    +setPropertyType(propertyType)
    +setArea(area)
    +setStreetAdress(streetAdress)
    +setCity(city)
    +setState(state)
    +setFloorNumber(floorNumber)
    +setDoorNumber(doorNumber)
    +setDistanceFromCityCenter(distanceFromCityCenter)
    +setPrice(price)
    +setNumberOfPhotos(numberOfPhotos)
    +addPhoto(photoURI)
    +setNumberOfBedrooms(numberOfBedrooms)
    +setNumberOfBathrooms(numberOfBathrooms)
    +setParkingSpaces(parkingSpaces)
    +addAvailableEquipment(availableEquipment)
    +setBasementExistence(basement)
    +setLoftExistence(loft)
    +setSunExposure(sunExposure)
    +setComissionType(comissionType)
    +setComission(comission)
    +setDate(date)
    +createProperty(address, area, distanceFromCityCenter, numberOfBathrooms, numberOfBedrooms, parking, availableEquipment, basement, sunExposure, loft, propertyType, photos, requestType)
    +createAnnouncement(property, date, commissionType, commission, requestType, propertyType, agent, store, owner, price)
    +addAnnouncement(announcement)
    +createSMS(announcement)
}

class Repositories
{
    +getInstance()
    +getPropertyTypeRepository()
    +getRegisteredUsersRepository()
    +getAnnouncementRepository()
}

class PropertyTypeRepository
{
    +getPropertyType()
}

class RegistedUsersRepository
{
    +getRegisteredUsers()
}

class Announcement
{
    -property: Property
    -date: LocalDate
    -comissionType: String
    -comission: Double
    -requestType: RequestType
    -propertyType: PropertyType
    -agent: Agent
    -store: Store
    -owner: Owner
    -price: double
    +createAnnouncement(property, date, commissionType, commission, requestType, propertyType, agent, store, owner, price)
}

class Agent
{
    -name: String
    -citizenCardNumber: Integer
    -taxNumber: TaxNumber
    -propertyAddress: PropertyAddress
    -email: String
    -phoneNumber: String
    -passportCardNumber: PassportCardNumber
}

Class Address
{
    -street: String
    -city: City
    -district: District
    -state: State
    -zipCode: String
}

class AnnouncementRepository
{
    +addAnnouncement(announcement)
}

class Property
{
    -area: double
    -distance: integer
    -price: double
    -photos: List<Photograph>
    -bedrooms: integer
    -bathrooms: integer
    -parkingSpaces: integer
    -availableEquipment: List<availableEquipment>
    -basement: boolean
    -loft: boolean
    -sun: String
    -comissionType: String
    -comission: double
    -announcement: Announcement
    -property: Property
    -date: LocalDate
    -photoURI: String
    +createProperty(area, distanceFromCityCenter, address, propertyType, photos)
    +createResidence(address, area, distanceFromCityCenter, numberOfBathrooms, numberOfBedrooms, parking, propertyType, photos, availableEquipment)
    +createHouse(address, area, distanceFromCityCenter, numberOfBathrooms, numberOfBedrooms, parking, availableEquipment, basement, sunExposure, loft, propertyType, photos, requestType)

}



RegisterAnnouncementUI -> RegisterAnnouncementController
RegisterAnnouncementController .> Repositories
Repositories -> Announcement
Repositories -> RegistedUsersRepository
Repositories -> PropertyTypeRepository
Repositories -> AnnouncementRepository
RegisterAnnouncementController ---> "creates" Announcement
RegisterAnnouncementController ..> RegistedUsersRepository
RegisterAnnouncementController ..> PropertyTypeRepository
RegisterAnnouncementController ..> AnnouncementRepository
AnnouncementRepository -> "has" Announcement
Announcement -> "has" Property
Property -> "has" Address
Announcement --> "has" Agent
@enduml