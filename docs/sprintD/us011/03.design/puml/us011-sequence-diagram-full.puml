@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Agent" as ADM
participant ":OrderDecisionUI" as UI
participant ":OrderDecisionController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "announcementRepository\n:AnnouncementRepository" as A
participant "orderRepository:\nOrderRepository" as OrderRepository

activate ADM

    ADM -> UI : requests to see properties \navailable for purchase
    activate UI

    UI -> CTRL** : create

activate CTRL

        CTRL -> RepositorySingleton : getInstance()
        activate RepositorySingleton

        RepositorySingleton --> CTRL: repositories
        deactivate RepositorySingleton

        CTRL -> A : getAnnouncementRepository()
        activate A

        A--> CTRL: announcementRepository
        deactivate A

    UI -> CTRL:  getAnnouncementListSortedByDate()

        CTRL -> A : getAnnouncementsList()
        activate A

        A --> CTRL : announcementsList()
        deactivate A

    CTRL --> UI : announcementsList()
    deactivate CTRL

    UI --> ADM : shows the available properties and asks to select one

    ADM -> UI : selects a property

    UI -> CTRL : getOrderListSortedByPrice(selectedProperty)

    activate CTRL

        CTRL -> RepositorySingleton : getInstance()
        activate RepositorySingleton

        RepositorySingleton --> CTRL: repositories
        deactivate RepositorySingleton

        CTRL -> PLAT : getOrderRepository()
        activate PLAT

        PLAT --> CTRL: orderRepository
        deactivate PLAT


        CTRL -> OrderRepository : getOrdersList()
        activate OrderRepository

        OrderRepository --> CTRL : ordersList
        deactivate OrderRepository

    CTRL --> UI : ordersList
    deactivate CTRL

alt if that exists purchase orders

    UI --> ADM : displays the list of purchase \norders grouped by property
    deactivate UI
    ADM -> UI : select a purchase order
    activate UI

    UI --> ADM : asks for decision (accept or decline)
    deactivate UI
    ADM -> UI : makes the decision (accept or decline)
    activate UI

    alt accepts the order

    UI -> CTRL : acceptPurchaseOrder(order)

    activate CTRL

    CTRL -> PLAT : getOrdersByAnnouncement(announcement)

    activate PLAT

    PLAT --> CTRL : ordersList

    deactivate PLAT

    CTRL -> CTRL: declineOtherOrders(acceptedOrder)

    CTRL -> EmailService: sendMessage(clientEmail, message)

    activate EmailService

    EmailService --> CTRL : operation success
    deactivate EmailService

    CTRL --> UI : operation success

    deactivate CTRL

    else declines the order

    UI -> CTRL : declinePurchaseOrder(order)
    activate CTRL

    CTRL -> OrderRepository: getOrdersByAnnouncement(announcement)

    activate OrderRepository

    OrderRepository --> CTRL : ordersList

    deactivate OrderRepository

    CTRL -> EmailService: sendMessage(clientEmail, message)

    activate EmailService

    EmailService --> CTRL: operation success

    deactivate EmailService

    CTRL --> UI : operation success

    deactivate CTRL

    end

    UI --> ADM : operation success


else if there's no purchase orders


    UI --> ADM : shows an empty list \nand the operation ends

deactivate UI

end
@enduml